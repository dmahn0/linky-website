링키(Linky) 플랫폼 회원가입 시스템 설계 문서
=====================================================

날짜: 2025-01-16
작성자: Claude Code AI Assistant

목차
====
1. 수동 승인 프로세스 설계
2. 법적 규제 검토
   2.1 개인정보처리방침 초안
   2.2 이용약관 초안
   2.3 파트너 서비스 약관 (예정)
3. MVP 보안 설계 (예정)
4. 기술 아키텍처 확정 (예정)
5. UX/UI 설계 - Figma 기반 (예정)
6. 운영 준비사항 (예정)
7. 단계별 전략 수립 (예정)

====================================================================

1. 수동 승인 프로세스 설계
==========================

1.1 승인 플로우 다이어그램
-----------------------
[회원가입 폼 작성]
    ↓
[이메일 발송] → "가입 신청이 접수되었습니다"
    ↓
[이메일 인증 완료]
    ↓
[승인 대기 상태] → "영업일 1-2일 내 검토"
    ↓
[관리자 알림] → Slack/Email로 새 신청 알림
    ↓
[관리자 검토]
    ├─[승인] → 환영 이메일 + 로그인 가능
    └─[거부] → 거부 사유 이메일 + 재신청 안내

1.2 데이터베이스 설계
-------------------
// PendingApprovals Collection
{
  approvalId: "APR-20250116-001",
  userId: "firebase_uid",
  userType: "business" | "partner",

  // 제출 정보
  submittedData: {
    // 사업자
    businessName: "강남스터디카페",
    businessNumber: "123-45-67890",
    businessAddress: "서울시 강남구...",
    spacePhotos: ["url1", "url2"],

    // 파트너
    realName: "홍길동",
    idCardPhoto: "encrypted_url",
    selfieWithId: "encrypted_url",
    workAreas: ["강남구", "서초구"],
  },

  // 검토 상태
  status: "pending" | "reviewing" | "approved" | "rejected",
  assignedTo: null | "admin_uid",

  // 검토 결과
  reviewResult: {
    decision: null | "approved" | "rejected",
    reason: null | "신분증 불명확" | "사업자번호 불일치",
    notes: "추가 검토 사항",
    reviewedAt: null | timestamp,
    reviewedBy: null | "admin_uid"
  },

  // 메타데이터
  submittedAt: timestamp,
  lastUpdated: timestamp,
  attemptCount: 1, // 재신청 횟수
}

1.3 관리자 대시보드 기능 명세
---------------------------
승인 대기 목록 화면:
[필터] 전체 | 사업자 | 파트너 | 오늘 | 3일 이상
[정렬] 최신순 | 오래된순 | 유형별

목록 예시:
┌─────────────────────────────────────┐
│ 🏢 강남스터디카페 (사업자)          │
│ 홍길동 | 2025-01-16 14:30 신청      │
│ [상세보기] [빠른승인] [보류]        │
└─────────────────────────────────────┘

상세 검토 화면:
[사업자 검토 화면]
- 사업자명: 강남스터디카페
- 사업자번호: 123-45-67890 [국세청 확인]
- 대표자명: 홍길동
- 연락처: 010-1234-5678 [SMS 테스트]
- 주소: 서울시 강남구...
- 공간 사진: [이미지 갤러리]

[검증 체크리스트]
✓ 사업자번호 유효성
✓ 공간 사진 적절성
□ 연락처 확인
□ 기존 회원 여부

[승인/거부]
[승인하기] [거부하기] [추가 서류 요청]

1.4 자동화 가능한 검증 로직
-------------------------
// 사업자번호 검증 (국세청 API)
async function validateBusinessNumber(bizNo) {
  // 형식 검증
  const pattern = /^\d{3}-\d{2}-\d{5}$/;
  if (!pattern.test(bizNo)) return false;

  // API 호출 (추후 구현)
  // const result = await checkBizAPI(bizNo);
  return true; // MVP는 형식만 체크
}

// 중복 가입 체크
async function checkDuplicate(email, phone, bizNo) {
  const existing = await db.collection('users')
    .where('email', '==', email)
    .or('phone', '==', phone)
    .or('business.businessNumber', '==', bizNo)
    .get();

  return !existing.empty;
}

1.5 이메일 템플릿
---------------
신청 접수 이메일:
제목: [Linky] 회원가입 신청이 접수되었습니다

안녕하세요, {{name}}님

Linky 회원가입 신청이 정상적으로 접수되었습니다.

영업일 기준 1-2일 내에 검토 후
승인 결과를 알려드리겠습니다.

빠른 승인을 위해 확인해주세요:
- 제출하신 서류가 선명한지
- 연락처가 정확한지
- 사업자 정보가 최신인지

문의: support@linkykorea.com

승인 완료 이메일:
제목: [Linky] 🎉 회원가입이 승인되었습니다!

{{name}}님, 환영합니다!

회원가입이 승인되어 이제 Linky 서비스를
이용하실 수 있습니다.

[로그인하기] 버튼

첫 이용 혜택:
- 첫 달 수수료 10% 할인
- 우선 매칭 혜택

시작하기 가이드를 확인해보세요!

1.6 거부 사유 분류
----------------
const REJECTION_REASONS = {
  INVALID_BIZ_NO: "사업자등록번호가 유효하지 않습니다",
  UNCLEAR_DOCS: "제출하신 서류를 확인할 수 없습니다",
  DUPLICATE: "이미 가입된 정보입니다",
  INAPPROPRIATE: "서비스 이용이 적합하지 않은 업종입니다",
  INCOMPLETE: "필수 정보가 누락되었습니다",
  OTHER: "기타 (상세 사유 입력)"
};

====================================================================

2. 법적 규제 검토
=================

2.1 개인정보처리방침 초안
-----------------------
# 개인정보처리방침

## 1. 개인정보의 처리 목적
주식회사 링키(이하 "회사")는 다음의 목적을 위하여 개인정보를 처리합니다:

### 회원가입 및 관리
- 회원 가입의사 확인, 회원자격 유지·관리
- 서비스 부정이용 방지, 각종 고지·통지
- 고충처리 목적으로 개인정보를 처리합니다

### 재화 또는 서비스 제공
- 서비스 제공, 계약서·청구서 발송
- 콘텐츠 제공, 맞춤서비스 제공
- 본인인증, 연령인증, 요금결제·정산

### 마케팅 및 광고에의 활용
- 이벤트 및 광고성 정보 제공 및 참여기회 제공
- 인구통계학적 특성에 따른 서비스 제공 및 광고 게재
- 서비스의 유효성 확인, 접속빈도 파악

## 2. 개인정보의 처리 및 보유 기간
회사는 법령에 따른 개인정보 보유·이용기간 또는 정보주체로부터 개인정보를 수집시에 동의받은 개인정보 보유·이용기간 내에서 개인정보를 처리·보유합니다.

### 회원정보
- 보유기간: 회원탈퇴 후 30일
- 보유근거: 서비스 이용계약 해지 및 부정이용 방지

### 거래기록
- 보유기간: 5년
- 보유근거: 전자상거래 등에서의 소비자보호에 관한 법률

### 정산기록
- 보유기간: 5년
- 보유근거: 국세기본법, 법인세법

## 3. 개인정보의 제3자 제공
회사는 원칙적으로 정보주체의 개인정보를 수집·이용 목적으로 명시한 범위 내에서 처리하며, 정보주체의 동의, 법률의 특별한 규정 등 개인정보 보호법 제17조 및 제18조에 해당하는 경우에만 개인정보를 제3자에게 제공합니다.

### 제공받는 자: OO결제대행업체
- 제공목적: 결제대행 서비스
- 제공항목: 이름, 휴대폰번호, 결제정보
- 보유기간: 거래 완료 후 5년

### 제공받는 자: OO본인인증업체
- 제공목적: 본인인증 서비스
- 제공항목: 이름, 휴대폰번호, 생년월일
- 보유기간: 인증 완료 후 즉시 삭제

## 4. 개인정보처리 위탁
회사는 원활한 개인정보 업무처리를 위하여 다음과 같이 개인정보 처리업무를 위탁하고 있습니다:

### 수탁업체: Amazon Web Services
- 위탁업무: 클라우드 서비스 제공
- 위탁기간: 서비스 종료시까지

### 수탁업체: Firebase (Google)
- 위탁업무: 인증 및 데이터베이스 서비스
- 위탁기간: 서비스 종료시까지

## 5. 정보주체의 권리·의무 및 그 행사방법
정보주체는 개인정보주체로서 다음과 같은 권리를 행사할 수 있습니다:

1. 개인정보 열람요구
2. 오류 등이 있을 경우 정정·삭제 요구
3. 처리정지 요구

권리 행사는 개인정보 보호법 시행규칙 별지 제8호에 따라 서면, 전자우편, 모사전송(FAX) 등을 통하여 하실 수 있으며 회사는 이에 대해 지체 없이 조치하겠습니다.

연락처: privacy@linkykorea.com

## 6. 처리하는 개인정보의 항목
회사는 다음의 개인정보 항목을 처리하고 있습니다:

### 회원가입
- 필수항목: 이메일, 비밀번호, 이름, 휴대폰번호, 회원구분
- 선택항목: 프로필 사진, 마케팅 수신동의

### 사업자 추가정보
- 필수항목: 사업자명, 사업자등록번호, 대표자명, 사업장주소
- 선택항목: 공간사진, 부가연락처

### 파트너 추가정보
- 필수항목: 실명, 생년월일, 신분증 사본, 활동지역, 계좌정보
- 선택항목: 경력사항, 자격증

### 자동수집항목
- 접속 IP주소, 쿠키, 방문일시, 서비스 이용기록

## 7. 개인정보의 파기
회사는 개인정보 보유기간의 경과, 처리목적 달성 등 개인정보가 불필요하게 되었을 때에는 지체없이 해당 개인정보를 파기합니다.

### 파기절차
- 이용자가 입력한 정보는 목적 달성 후 별도 DB에 옮겨져 일정기간 저장된 후 파기
- 법률에 의한 정보보유 사유가 있을 경우 해당 기간 경과 후 파기

### 파기방법
- 전자적 파일: 기록을 재생할 수 없도록 완전삭제
- 종이문서: 분쇄기로 분쇄하거나 소각

## 8. 개인정보 보호책임자
회사는 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와 관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자를 지정하고 있습니다:

개인정보 보호책임자
- 성명: [이름]
- 직책: [직책]
- 연락처: privacy@linkykorea.com, 02-XXXX-XXXX

## 9. 개인정보 처리방침 변경
이 개인정보처리방침은 시행일로부터 적용되며, 법령 및 방침에 따른 변경내용의 추가, 삭제 및 정정이 있는 경우에는 변경사항의 시행 7일 전부터 공지사항을 통하여 고지할 것입니다.

시행일자: 2025년 XX월 XX일

2.2 법적 준수 체크리스트
--------------------
개인정보보호법 준수사항:
- [ ] 개인정보 수집·이용 내역 명시
- [ ] 개인정보 보유·이용기간 명시
- [ ] 개인정보 제3자 제공 내역 명시
- [ ] 개인정보 처리위탁 내역 명시
- [ ] 정보주체 권리행사 방법 명시
- [ ] 개인정보 보호책임자 지정·공개

추가 고려사항:
- [ ] 쿠키 사용에 대한 안내
- [ ] 해외 전송에 대한 안내 (Firebase 사용시)
- [ ] 개인정보 영향평가 실시 (필요시)

2.3 이용약관 초안
---------------
# 링키(Linky) 서비스 이용약관

## 제1조 (목적)
본 약관은 주식회사 링키(이하 "회사")가 제공하는 링키 서비스(이하 "서비스")의 이용과 관련하여 회사와 이용자 간의 권리, 의무 및 책임사항을 규정함을 목적으로 합니다.

## 제2조 (정의)
1. "서비스"라 함은 회사가 제공하는 공간 정리 중개 플랫폼 서비스를 의미합니다.
2. "이용자"라 함은 본 약관에 따라 서비스를 이용하는 회원 및 비회원을 의미합니다.
3. "회원"이라 함은 서비스에 개인정보를 제공하여 회원등록을 한 자를 의미합니다.
4. "사업자 회원"이라 함은 공간 정리 서비스를 의뢰하는 회원을 의미합니다.
5. "파트너 회원"이라 함은 공간 정리 서비스를 제공하는 회원을 의미합니다.

## 제3조 (약관의 효력 및 변경)
1. 본 약관은 서비스를 이용하고자 하는 모든 이용자에게 그 효력이 발생합니다.
2. 회사는 합리적인 사유가 발생될 경우 관련 법령에 위배되지 않는 범위에서 본 약관을 변경할 수 있습니다.
3. 약관이 변경되는 경우 회사는 변경사항을 그 적용일자 7일 이전부터 서비스 내 공지사항을 통해 공지합니다.

## 제4조 (회원가입)
1. 회원가입은 이용자가 약관의 내용에 동의하고 회원가입신청을 한 후 회사가 이러한 신청에 대하여 승인함으로써 체결됩니다.
2. 회원가입신청자는 반드시 실명으로 본인의 정보를 제공하여야 합니다.
3. 회사는 다음 각 호에 해당하는 신청에 대하여는 승인하지 않거나 사후에 이용계약을 해지할 수 있습니다:
   - 가입신청자가 본 약관에 의하여 이전에 회원자격을 상실한 적이 있는 경우
   - 실명이 아니거나 타인의 명의를 이용한 경우
   - 허위의 정보를 기재하거나, 회사가 제시하는 내용을 기재하지 않은 경우
   - 만 14세 미만인 경우

## 제5조 (서비스의 제공)
1. 회사는 다음과 같은 서비스를 제공합니다:
   - 사업자와 파트너 간의 중개 서비스
   - 예약 및 일정 관리 서비스
   - 결제 및 정산 서비스
   - 고객 지원 서비스
   - 기타 회사가 정하는 서비스

2. 회사는 서비스를 일정범위로 분할하여 각 범위별로 이용가능시간을 별도로 지정할 수 있습니다.

## 제6조 (서비스 이용료)
1. 서비스 이용료는 각 서비스별로 별도로 정하며, 서비스 화면에 표시합니다.
2. 파트너 회원은 매칭 성사 시 수수료를 지급해야 합니다.
3. 결제 수단은 신용카드, 계좌이체, 간편결제 등 회사가 정하는 방법에 따릅니다.

## 제7조 (환불 및 취소)
1. 사업자 회원의 서비스 취소 및 환불은 다음과 같습니다:
   - 서비스 시작 24시간 전: 전액 환불
   - 서비스 시작 12시간 전: 80% 환불
   - 서비스 시작 2시간 전: 50% 환불
   - 서비스 시작 후: 환불 불가

2. 파트너의 귀책사유로 서비스가 제공되지 않는 경우 전액 환불됩니다.

## 제8조 (회원의 의무)
1. 회원은 다음 행위를 하여서는 안 됩니다:
   - 신청 또는 변경시 허위 내용의 등록
   - 타인의 정보 도용
   - 회사가 게시한 정보의 변경
   - 회사가 정한 정보 이외의 정보 등의 송신 또는 게시
   - 회사 및 기타 제3자의 저작권 등 지적재산권에 대한 침해
   - 회사 및 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위
   - 외설 또는 폭력적인 메시지, 화상, 음성, 기타 공서양속에 반하는 정보를 서비스에 공개 또는 게시하는 행위

## 제9조 (회사의 의무)
1. 회사는 법령과 본 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 본 약관이 정하는 바에 따라 지속적이고, 안정적으로 서비스를 제공하는데 최선을 다하여야 합니다.
2. 회사는 개인정보 보호를 위한 보안시스템을 구축하며 개인정보 보호정책을 공시하고 준수합니다.
3. 회사는 서비스 이용과 관련하여 회원으로부터 제기된 의견이나 불만이 정당하다고 객관적으로 인정될 경우에는 적절한 절차를 거쳐 즉시 처리하여야 합니다.

## 제10조 (개인정보보호)
회사는 관련법령이 정하는 바에 따라 회원의 개인정보를 보호하기 위해 노력합니다. 개인정보의 보호 및 사용에 대해서는 관련법령 및 회사의 개인정보처리방침이 적용됩니다.

## 제11조 (서비스 이용의 제한)
1. 회사는 회원이 본 약관의 의무를 위반하거나 서비스의 정상적인 운영을 방해한 경우, 경고, 일시정지, 영구이용정지 등으로 서비스 이용을 단계적으로 제한할 수 있습니다.
2. 회사는 전항에도 불구하고 저작권법 위반, 불법통신, 해킹, 악성프로그램의 배포, 접속권한 초과행위 등과 같이 관련법을 위반한 경우에는 즉시 영구이용정지를 할 수 있습니다.

## 제12조 (손해배상)
1. 회사와 회원은 서비스 이용과 관련하여 고의 또는 과실로 상대방에게 손해를 끼친 경우 이를 배상할 책임이 있습니다.
2. 회사는 무료서비스의 장애, 제공 중단으로 인하여 회원이 입은 손해에 대해서는 배상하지 않습니다.

## 제13조 (면책조항)
1. 회사는 천재지변 또는 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 관한 책임이 면제됩니다.
2. 회사는 회원의 귀책사유로 인한 서비스 이용의 장애에 대하여 책임을 지지 않습니다.
3. 회사는 서비스에 표출된 회원의 의견, 정보, 자료 등의 신뢰성, 정확성 등에 대해서는 책임을 지지 않습니다.

## 제14조 (준거법 및 분쟁해결)
1. 본 약관의 해석 및 회사와 회원 간의 분쟁에 대하여는 대한민국의 법을 적용합니다.
2. 회사와 회원 간 발생한 분쟁에 관한 소송은 민사소송법상의 관할법원에 제기합니다.

## 부칙
본 약관은 2025년 XX월 XX일부터 적용됩니다.

2.4 전자상거래법 준수사항
----------------------
필수 표시사항:
- [ ] 사업자 정보 (상호, 주소, 전화번호)
- [ ] 이용료 및 부대비용
- [ ] 청약철회 및 환불 조건
- [ ] 배송 및 서비스 제공 조건
- [ ] 개인정보 보호 조치
- [ ] 고객불만 처리 연락처

소비자 보호 조치:
- [ ] 14일 청약철회권 (단, 서비스 특성상 제한 가능)
- [ ] 환불 절차 명시
- [ ] 분쟁 해결 절차 안내

2.5 파트너 서비스 약관 초안 (근로자성 회피 중심)
--------------------------------------------
# 파트너 서비스 약관

## 제1조 (목적)
본 약관은 링키 플랫폼에서 공간 정리 서비스를 제공하는 독립적인 사업자(이하 "파트너")와 주식회사 링키(이하 "회사") 간의 서비스 제공 조건을 명확히 하여 상호 권리와 의무를 규정함을 목적으로 합니다.

## 제2조 (파트너의 지위 및 독립성)
1. 파트너는 회사의 직원이 아닌 독립적인 사업자로서 활동합니다.
2. 파트너는 회사와 고용관계가 아닌 업무위탁 관계에 있습니다.
3. 파트너는 4대보험(국민연금, 건강보험, 고용보험, 산재보험)의 적용을 받지 않습니다.
4. 파트너는 소득세법에 따른 사업소득세 납부 의무가 있습니다.

## 제3조 (업무 수행의 자율성)
1. 파트너는 서비스 요청에 대해 자유롭게 수락 또는 거절할 수 있습니다.
2. 파트너는 본인의 업무 시간을 자율적으로 결정할 수 있습니다.
3. 파트너는 업무 수행 방식 및 순서를 자율적으로 결정할 수 있습니다.
4. 회사는 파트너의 업무 수행 과정에 직접적으로 개입하지 않습니다.

## 제4조 (서비스 제공 기준)
1. 파트너는 다음 서비스를 제공할 수 있습니다:
   - 공간 정리 및 정돈
   - 청소 서비스
   - 기타 회사가 승인한 서비스

2. 파트너는 서비스 품질 유지를 위해 다음 기준을 준수해야 합니다:
   - 약속 시간 준수
   - 고객과의 원활한 소통
   - 서비스 완료 후 사진 제출

## 제5조 (수수료 및 정산)
1. 파트너는 매칭 성사 시 서비스 금액의 20%를 플랫폼 이용 수수료로 지급합니다.
2. 수수료에는 부가가치세가 별도로 부과됩니다.
3. 정산은 매월 말일 기준으로 익월 10일에 이루어집니다.
4. 파트너는 세금계산서 발행 의무가 있습니다.

## 제6조 (배상책임보험)
1. 파트너는 서비스 제공 중 발생할 수 있는 사고에 대비하여 배상책임보험에 가입해야 합니다.
2. 보험 가입 증명서를 회사에 제출해야 합니다.
3. 보험 가입 비용은 파트너가 부담합니다.

## 제7조 (개인정보 보호)
1. 파트너는 서비스 제공 과정에서 취득한 고객의 개인정보를 보호해야 합니다.
2. 서비스 완료 후 고객 개인정보를 즉시 파기해야 합니다.
3. 개인정보 유출 시 관련 법령에 따른 책임을 집니다.

## 제8조 (서비스 제한 및 해지)
1. 다음의 경우 서비스 제공을 제한하거나 계약을 해지할 수 있습니다:
   - 허위 정보 제공 시
   - 고객 불만이 지속적으로 발생하는 경우
   - 본 약관을 위반하는 경우
   - 범죄 행위 또는 법령 위반 시

2. 계약 해지 시 30일 전 서면 통지를 원칙으로 합니다.

## 제9조 (분쟁 해결)
1. 본 약관과 관련된 분쟁은 대한민국 법을 적용합니다.
2. 분쟁 발생 시 협의를 통해 해결하되, 합의가 이루어지지 않을 경우 관할 법원에 제기합니다.

## 부칙
본 약관은 2025년 XX월 XX일부터 적용됩니다.

====================================================================

남은 작업 항목
==============
3. MVP 보안 설계
4. 기술 아키텍처 확정
5. UX/UI 설계 (Figma 기반)
6. 운영 준비사항
7. 단계별 전략 수립

====================================================================

작업 진행 상황
=============
✅ 완료: 수동 승인 프로세스 설계
✅ 완료: 개인정보처리방침 초안 작성
✅ 완료: 이용약관 초안 작성
✅ 완료: 파트너 서비스 약관 작성 (근로자성 회피 중심)
⏳ 대기: MVP 보안 설계
⏳ 대기: 기술 아키텍처 확정
⏳ 대기: UX/UI 설계 (Figma 기반)
⏳ 대기: 운영 준비사항
⏳ 대기: 단계별 전략 수립

====================================================================

다음 단계 권장 사항
==================
1. 법무법인을 통한 약관 검토
2. 개인정보보호 전문가 자문
3. Firebase 프로젝트 설정 시작
4. Figma 디자인 시스템 구축 시작
5. 관리자 대시보드 요구사항 세분화

====================================================================

참고사항
========
- 본 문서는 MVP(Minimum Viable Product) 기준으로 작성됨
- 실제 서비스 출시 전 법무 검토 필수
- 개인정보보호법, 전자상거래법 등 관련 법령 준수 필요
- 서비스 특성에 맞는 추가 조항 필요할 수 있음

====================================================================

연락처 및 문의
=============
기술 관련 문의: Claude Code AI Assistant
법무 관련 문의: 전문 법무법인 자문 권장
개인정보보호 관련: 개인정보보호 전문가 자문 권장

====================================================================

3. MVP 보안 설계
================

3.1 인증 및 인가 보안
-------------------
비밀번호 정책:
const PASSWORD_POLICY = {
  minLength: 8,
  maxLength: 128,
  requirements: {
    lowercase: true,    // 소문자 필수
    uppercase: true,    // 대문자 필수
    numbers: true,      // 숫자 필수
    symbols: true       // 특수문자 필수
  },
  forbidden: [
    'password', '123456', 'qwerty', 'admin',
    'linky', 'password123', '12345678'
  ],
  preventConsecutive: true,  // 연속 문자 방지 (aaa, 123)
  preventRepeated: true,     // 반복 패턴 방지 (abcabc)
  preventPersonalInfo: true  // 개인정보 포함 방지
};

세션 관리:
const SESSION_CONFIG = {
  // 세션 만료 시간
  idleTimeout: 30 * 60 * 1000,      // 30분 비활성 시 자동 로그아웃
  maxSessionTime: 8 * 60 * 60 * 1000, // 8시간 후 강제 로그아웃
  
  // 동시 접속 제한
  maxConcurrentSessions: 3,          // 최대 3개 디바이스 동시 접속
  
  // 보안 검증
  requireReauthForSensitive: true,   // 민감한 작업 시 재인증
  ipChangeDetection: true,           // IP 변경 감지
  deviceFingerprinting: true,        // 디바이스 지문 인식
  
  // 세션 데이터 보호
  httpOnly: true,                    // XSS 방지
  secure: true,                      // HTTPS만 허용
  sameSite: 'strict'                 // CSRF 방지
};

3.2 데이터 보호
-------------
민감정보 암호화:
const ENCRYPTION_POLICY = {
  // 필수 암호화 대상
  requireEncryption: [
    'password',           // 비밀번호 (bcrypt)
    'businessNumber',     // 사업자등록번호
    'idNumber',          // 주민등록번호
    'accountNumber',     // 계좌번호
    'phoneNumber',       // 휴대폰번호
    'idCardPhoto',       // 신분증 사진
    'bankInfo'           // 은행 정보
  ],
  
  // 암호화 방식
  algorithms: {
    password: 'bcrypt',        // 비밀번호: bcrypt (salt rounds: 12)
    sensitive: 'AES-256-GCM',  // 민감정보: AES-256-GCM
    files: 'AES-256-CBC'       // 파일: AES-256-CBC
  },
  
  // 키 관리
  keyRotation: 90,             // 90일마다 키 교체
  keyStorage: 'HSM',           // Hardware Security Module
  backupKeys: 3                // 백업 키 개수
};

3.3 입력 검증 및 보안
------------------
XSS 방지:
const INPUT_VALIDATION = {
  // HTML 태그 완전 제거
  stripAllTags: ['businessName', 'address', 'notes'],
  
  // 허용된 태그만 유지
  allowedTags: {
    description: ['b', 'i', 'u', 'br'],
    review: ['b', 'i', 'u', 'br', 'p']
  },
  
  // 길이 제한
  maxLength: {
    name: 50,
    email: 100,
    businessName: 100,
    address: 200,
    notes: 500,
    review: 1000
  },
  
  // 특수문자 제한
  allowedChars: {
    name: /^[가-힣a-zA-Z\s]+$/,
    businessNumber: /^\d{3}-\d{2}-\d{5}$/,
    phoneNumber: /^010-\d{4}-\d{4}$/,
    email: /^[^\s@]+@[^\s@]+\.[^\s@]+$/
  }
};

3.4 파일 업로드 보안
-----------------
파일 업로드 정책:
const FILE_UPLOAD_POLICY = {
  // 허용 파일 형식
  allowedTypes: {
    images: ['jpg', 'jpeg', 'png', 'gif', 'webp'],
    documents: ['pdf'],
    // 실행 파일 완전 금지
    forbidden: ['exe', 'bat', 'cmd', 'com', 'scr', 'js', 'vbs', 'jar']
  },
  
  // 파일 크기 제한
  maxSize: {
    image: 5 * 1024 * 1024,      // 5MB
    document: 10 * 1024 * 1024,  // 10MB
    total: 50 * 1024 * 1024      // 총 50MB
  },
  
  // 보안 검증
  virusScan: true,               // 바이러스 검사
  metadataStrip: true,           // 메타데이터 제거
  imageResize: true,             // 이미지 리사이즈
  
  // 저장 위치
  storageLocation: 'isolated_bucket',  // 격리된 버킷
  directAccess: false,           // 직접 접근 금지
  signedUrls: true,              // 서명된 URL 사용
  urlExpiration: 3600            // 1시간 후 URL 만료
};

3.5 네트워크 보안
--------------
HTTPS 및 보안 헤더:
const SECURITY_HEADERS = {
  // HTTPS 강제
  'Strict-Transport-Security': 'max-age=63072000; includeSubDomains; preload',
  
  // XSS 방지
  'X-XSS-Protection': '1; mode=block',
  'X-Content-Type-Options': 'nosniff',
  
  // 클릭재킹 방지
  'X-Frame-Options': 'DENY',
  
  // CSP (Content Security Policy)
  'Content-Security-Policy': [
    "default-src 'self'",
    "script-src 'self' 'unsafe-inline' https://www.gstatic.com",
    "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com",
    "img-src 'self' data: https:",
    "font-src 'self' https://fonts.gstatic.com",
    "connect-src 'self' https://firebase.googleapis.com",
    "frame-ancestors 'none'"
  ].join('; '),
  
  // 레퍼러 정책
  'Referrer-Policy': 'strict-origin-when-cross-origin',
  
  // 권한 정책
  'Permissions-Policy': 'camera=(), microphone=(), geolocation=()'
};

3.6 모니터링 및 로깅
-----------------
보안 이벤트 로깅:
const SECURITY_LOGGING = {
  // 로그 레벨
  levels: {
    CRITICAL: 'critical',    // 보안 침해 시도
    HIGH: 'high',           // 의심스러운 활동
    MEDIUM: 'medium',       // 비정상 접근
    LOW: 'low'              // 일반 보안 이벤트
  },
  
  // 로그 대상 이벤트
  events: {
    // 인증 관련
    LOGIN_SUCCESS: 'medium',
    LOGIN_FAILURE: 'high',
    LOGIN_BRUTE_FORCE: 'critical',
    PASSWORD_CHANGE: 'medium',
    
    // 권한 관련
    UNAUTHORIZED_ACCESS: 'high',
    PRIVILEGE_ESCALATION: 'critical',
    SENSITIVE_DATA_ACCESS: 'medium',
    
    // 파일 업로드
    FILE_UPLOAD_SUCCESS: 'low',
    FILE_UPLOAD_VIRUS: 'critical',
    FILE_UPLOAD_BLOCKED: 'high',
    
    // 데이터 변경
    DATA_MODIFICATION: 'medium',
    DATA_DELETION: 'high',
    BULK_OPERATION: 'high'
  },
  
  // 로그 보관
  retention: {
    critical: 7 * 365,    // 7년
    high: 3 * 365,        // 3년
    medium: 1 * 365,      // 1년
    low: 90               // 90일
  }
};

3.7 Rate Limiting 및 DDoS 방지
----------------------------
요청 제한 정책:
const RATE_LIMITING = {
  // 일반 API 요청
  api: {
    windowMs: 15 * 60 * 1000,  // 15분
    max: 100,                  // 최대 100회
    message: '요청 한도 초과'
  },
  
  // 로그인 시도
  login: {
    windowMs: 15 * 60 * 1000,  // 15분
    max: 5,                    // 최대 5회
    skipSuccessfulRequests: true,
    message: '로그인 시도 초과'
  },
  
  // 파일 업로드
  upload: {
    windowMs: 60 * 60 * 1000,  // 1시간
    max: 10,                   // 최대 10개
    message: '파일 업로드 한도 초과'
  },
  
  // 비밀번호 재설정
  passwordReset: {
    windowMs: 60 * 60 * 1000,  // 1시간
    max: 3,                    // 최대 3회
    message: '비밀번호 재설정 한도 초과'
  }
};

3.8 보안 체크리스트
-----------------
MVP 보안 최소 요구사항:
## 인증 및 인가
- [ ] 강력한 비밀번호 정책 적용
- [ ] 세션 관리 보안 (타임아웃, 동시 접속 제한)
- [ ] 2차 인증 (SMS/이메일) 구현
- [ ] 권한 기반 접근 제어

## 데이터 보호
- [ ] 민감정보 암호화 (AES-256)
- [ ] 개인정보 분리 저장
- [ ] 데이터 백업 및 복구 계획
- [ ] 개인정보 파기 정책

## 입력 검증
- [ ] XSS 방지 (입력 검증 및 출력 인코딩)
- [ ] SQL Injection 방지 (매개변수화된 쿼리)
- [ ] CSRF 방지 (토큰 기반)
- [ ] 파일 업로드 보안

## 네트워크 보안
- [ ] HTTPS 강제 적용
- [ ] 보안 헤더 설정
- [ ] CSP (Content Security Policy)
- [ ] Rate Limiting

## 모니터링
- [ ] 보안 이벤트 로깅
- [ ] 실시간 보안 알림
- [ ] 정기 보안 점검
- [ ] 침해 사고 대응 계획

====================================================================

4. 기술 아키텍처 확정
===================

4.1 전체 시스템 아키텍처
---------------------
선택된 기술 스택:
Frontend Layer:
├── 현재: Vanilla HTML/CSS/JavaScript
├── 점진적 전환: React.js + TypeScript
├── 스타일링: Tailwind CSS
├── 상태관리: Context API → Redux Toolkit
└── 빌드도구: Vite

Backend Layer:
├── 인증: Firebase Authentication
├── 데이터베이스: Firestore (NoSQL)
├── 파일저장: Firebase Storage
├── 서버리스: Firebase Functions
└── 실시간: Firebase Realtime Database (알림용)

Infrastructure Layer:
├── 호스팅: Vercel (Frontend)
├── CDN: Vercel Edge Network
├── 모니터링: Firebase Analytics + Sentry
├── 로깅: Firebase Crashlytics
└── 보안: Firebase Security Rules

4.2 데이터베이스 설계 (Firestore)
------------------------------
컬렉션 구조:
// 📁 users (사용자 기본 정보)
{
  id: "user_uid",
  email: "user@example.com",
  type: "business" | "partner",
  status: "pending" | "approved" | "rejected" | "suspended",
  profile: {
    name: "홍길동",
    phone: "010-1234-5678",
    profileImage: "gs://bucket/profile.jpg",
    createdAt: timestamp,
    lastLoginAt: timestamp
  },
  settings: {
    notifications: {
      email: true,
      sms: false,
      push: true
    },
    privacy: {
      showPhone: false,
      showEmail: false
    }
  }
}

// 📁 businessUsers (사업자 추가 정보)
{
  id: "user_uid",
  business: {
    name: "강남스터디카페",
    registrationNumber: "123-45-67890", // 암호화
    representative: "홍길동",
    address: "서울시 강남구...",
    phone: "02-1234-5678",
    email: "business@example.com"
  },
  spaces: [
    {
      id: "space_001",
      name: "1층 스터디룸",
      type: "study_room",
      size: 15, // 평수
      photos: ["url1", "url2"],
      description: "조용한 개인 스터디 공간",
      amenities: ["wifi", "aircon", "desk"]
    }
  ],
  subscription: {
    plan: "basic" | "premium" | "enterprise",
    startDate: timestamp,
    endDate: timestamp,
    paymentMethod: "card" | "transfer"
  }
}

// 📁 partnerUsers (파트너 추가 정보)
{
  id: "user_uid",
  partner: {
    realName: "김파트너", // 암호화
    birthDate: "1990-01-01", // 암호화
    idNumber: "900101-1******", // 암호화
    idCardPhoto: "encrypted_url", // 암호화
    selfiePhoto: "encrypted_url", // 암호화
    bankAccount: { // 암호화
      bank: "국민은행",
      accountNumber: "123456-78-901234",
      holder: "김파트너"
    }
  },
  work: {
    areas: ["강남구", "서초구", "송파구"],
    services: ["cleaning", "organizing", "laundry"],
    experience: 24, // 개월
    certifications: ["정리수납전문가", "청소관리사"],
    workingHours: {
      monday: { available: true, start: "09:00", end: "18:00" },
      tuesday: { available: true, start: "09:00", end: "18:00" },
      // ... 요일별
    }
  },
  rating: {
    average: 4.8,
    totalReviews: 156,
    categories: {
      punctuality: 4.9,
      quality: 4.7,
      communication: 4.8,
      cleanliness: 4.9
    }
  }
}

4.3 Firebase 보안 규칙
---------------------
Firestore Security Rules:
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 사용자 기본 정보
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
                     resource.data.type == 'partner' && 
                     request.auth.uid in resource.data.approvedBusinesses;
    }
    
    // 사업자 추가 정보
    match /businessUsers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // 파트너 추가 정보 (민감정보 포함)
    match /partnerUsers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin(request.auth.uid);
      
      // 민감정보 제외 읽기 (매칭시)
      allow read: if request.auth != null && 
                     resource.data.work.areas.hasAny([request.auth.token.region]);
    }
    
    // 승인 대기 (관리자만 접근)
    match /pendingApprovals/{approvalId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
    }
    
    // 관리자 권한 확인 함수
    function isAdmin(uid) {
      return uid in ['admin_uid_1', 'admin_uid_2']; // 실제로는 별도 관리
    }
  }
}

4.4 Firebase Functions (서버리스 백엔드)
-------------------------------------
주요 Cloud Functions:
// 1. 회원가입 승인 처리
exports.processApproval = functions.firestore
  .document('pendingApprovals/{approvalId}')
  .onUpdate(async (change, context) => {
    const newValue = change.after.data();
    const oldValue = change.before.data();
    
    // 승인 상태 변경시
    if (newValue.status !== oldValue.status) {
      const userId = newValue.userId;
      const status = newValue.status;
      
      // 사용자 상태 업데이트
      await admin.firestore()
        .collection('users')
        .doc(userId)
        .update({ status });
      
      // 이메일 발송
      if (status === 'approved') {
        await sendApprovalEmail(userId);
      } else if (status === 'rejected') {
        await sendRejectionEmail(userId, newValue.rejectionReason);
      }
    }
  });

// 2. 자동 매칭 시스템
exports.autoMatching = functions.firestore
  .document('jobs/{jobId}')
  .onCreate(async (snap, context) => {
    const jobData = snap.data();
    const jobId = context.params.jobId;
    
    // 조건에 맞는 파트너 찾기
    const suitablePartners = await findSuitablePartners(jobData);
    
    // 매칭 알고리즘 실행
    const selectedPartner = await matchPartner(jobData, suitablePartners);
    
    if (selectedPartner) {
      // 파트너 배정
      await snap.ref.update({
        'partner.userId': selectedPartner.id,
        'partner.assignedAt': admin.firestore.FieldValue.serverTimestamp(),
        status: 'assigned'
      });
      
      // 알림 발송
      await sendMatchingNotification(selectedPartner.id, jobId);
    }
  });

4.5 API 설계 및 엔드포인트
------------------------
RESTful API 구조:
const API_ENDPOINTS = {
  // 인증
  auth: {
    register: 'POST /api/auth/register',
    login: 'POST /api/auth/login',
    logout: 'POST /api/auth/logout',
    refresh: 'POST /api/auth/refresh',
    forgotPassword: 'POST /api/auth/forgot-password',
    resetPassword: 'POST /api/auth/reset-password'
  },
  
  // 사용자 관리
  users: {
    profile: 'GET /api/users/profile',
    updateProfile: 'PUT /api/users/profile',
    uploadAvatar: 'POST /api/users/avatar',
    deleteAccount: 'DELETE /api/users/account'
  },
  
  // 승인 관리
  approvals: {
    submit: 'POST /api/approvals',
    status: 'GET /api/approvals/{id}/status',
    list: 'GET /api/admin/approvals', // 관리자
    approve: 'POST /api/admin/approvals/{id}/approve',
    reject: 'POST /api/admin/approvals/{id}/reject'
  },
  
  // 작업 관리
  jobs: {
    create: 'POST /api/jobs',
    list: 'GET /api/jobs',
    detail: 'GET /api/jobs/{id}',
    update: 'PUT /api/jobs/{id}',
    cancel: 'POST /api/jobs/{id}/cancel',
    complete: 'POST /api/jobs/{id}/complete'
  }
};

4.6 실시간 기능 구현
-----------------
Firebase Realtime Database 활용:
class RealtimeService {
  constructor() {
    this.db = firebase.database();
  }
  
  // 실시간 알림
  subscribeToNotifications(userId, callback) {
    const ref = this.db.ref(`notifications/${userId}`);
    ref.on('child_added', callback);
    return () => ref.off('child_added', callback);
  }
  
  // 실시간 작업 상태 업데이트
  subscribeToJobStatus(jobId, callback) {
    const ref = this.db.ref(`jobs/${jobId}/status`);
    ref.on('value', (snapshot) => {
      callback(snapshot.val());
    });
    return () => ref.off('value', callback);
  }
  
  // 실시간 채팅 (파트너-사업자 간)
  subscribeToChat(jobId, callback) {
    const ref = this.db.ref(`chats/${jobId}/messages`);
    ref.on('child_added', callback);
    return () => ref.off('child_added', callback);
  }
}

4.7 캐싱 및 성능 최적화
---------------------
캐싱 전략:
class CacheService {
  constructor() {
    this.cache = new Map();
    this.ttl = new Map();
  }
  
  // 메모리 캐시 (단기)
  setMemoryCache(key, data, ttlSeconds = 300) {
    this.cache.set(key, data);
    this.ttl.set(key, Date.now() + (ttlSeconds * 1000));
  }
  
  getMemoryCache(key) {
    const expiry = this.ttl.get(key);
    if (expiry && Date.now() > expiry) {
      this.cache.delete(key);
      this.ttl.delete(key);
      return null;
    }
    return this.cache.get(key);
  }
  
  // 브라우저 캐시 (장기)
  setBrowserCache(key, data, ttlHours = 24) {
    const expiry = new Date().getTime() + (ttlHours * 60 * 60 * 1000);
    localStorage.setItem(key, JSON.stringify({ data, expiry }));
  }
  
  getBrowserCache(key) {
    const cached = localStorage.getItem(key);
    if (!cached) return null;
    
    const { data, expiry } = JSON.parse(cached);
    if (new Date().getTime() > expiry) {
      localStorage.removeItem(key);
      return null;
    }
    return data;
  }
}

4.8 모니터링 및 로깅
-----------------
통합 모니터링 시스템:
class MonitoringService {
  constructor() {
    this.sentry = Sentry;
    this.analytics = firebase.analytics();
  }
  
  // 에러 로깅
  logError(error, context) {
    this.sentry.captureException(error, { extra: context });
  }
  
  // 성능 측정
  measurePerformance(name, fn) {
    const start = performance.now();
    const result = fn();
    const duration = performance.now() - start;
    
    this.analytics.logEvent('performance_metric', {
      name,
      duration,
      timestamp: Date.now()
    });
    
    return result;
  }
  
  // 비즈니스 이벤트 추적
  trackEvent(eventName, parameters) {
    this.analytics.logEvent(eventName, parameters);
  }
}

4.9 배포 및 CI/CD 파이프라인
--------------------------
Vercel 배포 설정:
// vercel.json
{
  "version": 2,
  "builds": [
    {
      "src": "package.json",
      "use": "@vercel/static-build",
      "config": {
        "distDir": "dist"
      }
    }
  ],
  "routes": [
    {
      "src": "/api/(.*)",
      "dest": "/api/$1"
    },
    {
      "src": "/(.*)",
      "dest": "/index.html"
    }
  ],
  "env": {
    "FIREBASE_API_KEY": "@firebase-api-key",
    "FIREBASE_AUTH_DOMAIN": "@firebase-auth-domain",
    "FIREBASE_PROJECT_ID": "@firebase-project-id"
  }
}

GitHub Actions 워크플로우:
name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to Vercel
      uses: vercel/action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

====================================================================

5. UX/UI 설계 (Figma 기반)
==========================

5.1 디자인 시스템 구축
-------------------
색상 팔레트:
/* 메인 브랜드 컬러 */
:root {
  /* Primary Colors (링키 그린) */
  --primary-50: #f0f9f5;
  --primary-100: #dcf4e6;
  --primary-200: #bbe8d0;
  --primary-300: #8dd5b1;
  --primary-400: #59bd8b;
  --primary-500: #22c55e;  /* 메인 컬러 */
  --primary-600: #16a34a;
  --primary-700: #15803d;
  --primary-800: #166534;
  --primary-900: #14532d;

  /* Secondary Colors (그레이) */
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #4b5563;
  --gray-700: #374151;
  --gray-800: #1f2937;
  --gray-900: #111827;

  /* Semantic Colors */
  --success: #10b981;
  --warning: #f59e0b;
  --error: #ef4444;
  --info: #3b82f6;
}

타이포그래피:
/* 폰트 시스템 */
:root {
  /* 폰트 패밀리 */
  --font-primary: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
  --font-mono: 'JetBrains Mono', monospace;

  /* 폰트 크기 */
  --text-xs: 0.75rem;    /* 12px */
  --text-sm: 0.875rem;   /* 14px */
  --text-base: 1rem;     /* 16px */
  --text-lg: 1.125rem;   /* 18px */
  --text-xl: 1.25rem;    /* 20px */
  --text-2xl: 1.5rem;    /* 24px */
  --text-3xl: 1.875rem;  /* 30px */
  --text-4xl: 2.25rem;   /* 36px */

  /* 폰트 굵기 */
  --font-light: 300;
  --font-normal: 400;
  --font-medium: 500;
  --font-semibold: 600;
  --font-bold: 700;
}

컴포넌트 스타일:
/* 버튼 컴포넌트 */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.5rem;
  font-weight: var(--font-medium);
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  border: none;
}

.btn-primary {
  background-color: var(--primary-500);
  color: white;
  padding: 0.75rem 1.5rem;
  font-size: var(--text-base);
}

.btn-primary:hover {
  background-color: var(--primary-600);
  transform: translateY(-1px);
}

/* 입력 컴포넌트 */
.input {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--gray-300);
  border-radius: 0.5rem;
  font-size: var(--text-base);
  transition: border-color 0.2s ease-in-out;
}

.input:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
}

/* 카드 컴포넌트 */
.card {
  background-color: white;
  border-radius: 1rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  padding: 1.5rem;
  transition: box-shadow 0.2s ease-in-out;
}

.card:hover {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

5.2 화면별 와이어프레임 및 프로토타입
---------------------------------
회원가입 플로우:
📱 Step 1: 회원 유형 선택
┌─────────────────────────────────────┐
│           링키에 오신 것을 환영합니다           │
│                                     │
│  ┌─────────────────┐ ┌─────────────────┐  │
│  │   🏢 사업자 회원   │ │   👤 파트너 회원   │  │
│  │                 │ │                 │  │
│  │ 공간 정리 서비스를  │ │ 정리 서비스를      │  │
│  │ 이용하고 싶어요    │ │ 제공하고 싶어요    │  │
│  │                 │ │                 │  │
│  │   [선택하기]     │ │   [선택하기]     │  │
│  └─────────────────┘ └─────────────────┘  │
│                                     │
│     이미 계정이 있으신가요? [로그인]        │
└─────────────────────────────────────┘

📱 Step 2: 기본 정보 입력 (공통)
┌─────────────────────────────────────┐
│  ← [뒤로]        기본 정보 (1/3)        │
│                                     │
│  이메일 *                            │
│  [example@email.com            ]    │
│                                     │
│  비밀번호 *                          │
│  [●●●●●●●●                   ] 👁   │
│  ✓ 8자 이상 ✓ 영문+숫자+특수문자        │
│                                     │
│  비밀번호 확인 *                      │
│  [●●●●●●●●                   ] 👁   │
│                                     │
│  이름 *                             │
│  [홍길동                       ]    │
│                                     │
│  휴대폰 번호 *                       │
│  [010-1234-5678              ]    │
│                                     │
│            [다음 단계]                │
└─────────────────────────────────────┘

로그인 및 대시보드:
📱 로그인 화면
┌─────────────────────────────────────┐
│                 링키                 │
│            로그인                    │
│                                     │
│  이메일                              │
│  [example@email.com            ]    │
│                                     │
│  비밀번호                            │
│  [●●●●●●●●                   ] 👁   │
│                                     │
│  □ 로그인 상태 유지                   │
│                                     │
│            [로그인]                  │
│                                     │
│  ──────── 또는 ────────             │
│                                     │
│     [📱 카카오로 로그인]              │
│     [🔗 네이버로 로그인]              │
│     [📧 구글로 로그인]               │
│                                     │
│    처음이신가요? [회원가입]            │
└─────────────────────────────────────┘

📱 사업자 대시보드
┌─────────────────────────────────────┐
│  ☰ 링키        🔔(3)     👤 홍길동     │
│                                     │
│  📊 이번 달 이용 현황                 │
│  ┌─────────────────────────────────┐ │
│  │ 완료된 정리: 8회  │ 예약 대기: 2회  │ │
│  │ 이용 금액: 340,000원 │ 절약 시간: 24시간│ │
│  └─────────────────────────────────┘ │
│                                     │
│  🚀 빠른 예약                        │
│  ┌─────────────────────────────────┐ │
│  │ 1층 메인 스터디룸 (15평)           │ │
│  │ 마지막 정리: 2주 전               │ │
│  │               [지금 예약하기]     │ │
│  └─────────────────────────────────┘ │
│                                     │
│  📅 예정된 일정                      │
│  ┌─────────────────────────────────┐ │
│  │ 1월 20일 (금) 오후 2시            │ │
│  │ 김정리 파트너 · 기본 정리          │ │
│  │ 예상 소요시간: 2시간              │ │
│  │     [파트너에게 메시지] [일정 변경] │ │
│  └─────────────────────────────────┘ │
│                                     │
│           [+ 새 예약 만들기]           │
└─────────────────────────────────────┘

관리자 승인 대시보드:
💻 관리자 승인 대시보드 (웹)
┌───────────────────────────────────────────────────────────┐
│ 링키 관리자  │ 승인 관리 │ 사용자 관리 │ 통계 │ 설정 │  👤 관리자 │
├───────────────────────────────────────────────────────────┤
│                                                           │
│ 📋 승인 대기 목록                    🔍 [검색]  📅 [필터]    │
│                                                           │
│ 🔴 긴급 (3일 이상)  🟡 대기 중  ✅ 처리 완료              │
│                                                           │
│ ┌─────────────────────────────────────────────────────┐   │
│ │ 🏢 강남스터디카페 (사업자)                            │   │
│ │ 신청자: 홍길동 · hong@example.com                   │   │
│ │ 신청일: 2025-01-16 14:30 (2시간 전)                │   │
│ │ 사업자번호: 123-45-67890 ✅ 검증됨                  │   │
│ │ 📍 서울시 강남구 테헤란로 123                        │   │
│ │ 📷 공간사진 5장 첨부                               │   │
│ │                                                   │   │
│ │ [📄 상세보기] [✅ 승인] [❌ 거부] [⏸️ 보류]          │   │
│ └─────────────────────────────────────────────────────┘   │
│                                                           │
│ 📊 통계                                                   │
│ 오늘: 신규 5건 · 승인 3건 · 거부 1건                      │
│ 평균 처리시간: 4.2시간 · 승인율: 87%                      │
└───────────────────────────────────────────────────────────┘

5.3 반응형 디자인 가이드라인
--------------------------
브레이크포인트 정의:
/* 반응형 브레이크포인트 */
:root {
  --mobile: 375px;      /* 모바일 (iPhone SE) */
  --mobile-lg: 428px;   /* 큰 모바일 (iPhone 14 Pro Max) */
  --tablet: 768px;      /* 태블릿 (iPad) */
  --tablet-lg: 1024px;  /* 큰 태블릿 (iPad Pro) */
  --desktop: 1280px;    /* 데스크톱 */
  --desktop-lg: 1536px; /* 큰 데스크톱 */
}

컴포넌트별 반응형 규칙:
/* 버튼 반응형 */
.btn {
  padding: 0.75rem 1rem; /* 모바일 */
}

@media (min-width: 768px) {
  .btn {
    padding: 0.75rem 1.5rem; /* 태블릿+ */
  }
}

/* 카드 그리드 반응형 */
.card-grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr; /* 모바일: 1열 */
}

@media (min-width: 768px) {
  .card-grid {
    grid-template-columns: repeat(2, 1fr); /* 태블릿: 2열 */
  }
}

@media (min-width: 1024px) {
  .card-grid {
    grid-template-columns: repeat(3, 1fr); /* 데스크톱: 3열 */
  }
}

5.4 사용자 경험 (UX) 가이드라인
-----------------------------
회원가입 UX 원칙:
🎯 목표: 3분 이내 간편 가입
📋 원칙:
  1. 단계별 정보 수집 (3단계 이내)
  2. 실시간 입력 검증
  3. 진행률 표시
  4. 자동 저장 (뒤로가기 시 정보 유지)
  5. 명확한 오류 메시지

💡 UX 개선 요소:
  - 사업자번호 자동 검증 API 연동
  - 주소 검색 API (다음/카카오 주소 API)
  - 파일 드래그앤드롭 업로드
  - 실시간 이메일 중복 체크
  - 비밀번호 강도 시각화

대시보드 UX 원칙:
🎯 목표: 한눈에 파악 가능한 정보 구조
📋 원칙:
  1. 중요 정보 우선 배치 (수익, 일정)
  2. 액션 지향적 CTA 버튼
  3. 시각적 피드백 (로딩, 성공, 오류)
  4. 직관적 네비게이션
  5. 개인화된 콘텐츠

🎨 시각적 계층:
  Level 1: 핵심 지표 (수익, 예약 현황)
  Level 2: 액션 아이템 (새 요청, 오늘 일정)
  Level 3: 보조 정보 (통계, 설정)

5.5 접근성 (Accessibility) 가이드라인
----------------------------------
WCAG 2.1 준수사항:
/* 색상 대비 확보 */
:root {
  --text-on-primary: #ffffff;    /* 4.5:1 대비 */
  --text-on-secondary: #374151;  /* 7:1 대비 */
  --text-disabled: #9ca3af;      /* 3:1 대비 */
}

/* 포커스 인디케이터 */
.focus-visible {
  outline: 2px solid var(--primary-500);
  outline-offset: 2px;
  border-radius: 4px;
}

/* 텍스트 크기 조절 지원 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

스크린 리더 지원:
<!-- 의미있는 HTML 구조 -->
<main role="main" aria-label="대시보드">
  <section aria-labelledby="stats-heading">
    <h2 id="stats-heading">이번 달 이용 현황</h2>
    <div role="group" aria-label="통계 정보">
      <div role="status" aria-label="완료된 정리 8회">
        <span aria-hidden="true">8회</span>
        <span class="sr-only">완료된 정리 8회</span>
      </div>
    </div>
  </section>
</main>

5.6 모바일 퍼스트 디자인
----------------------
터치 친화적 인터페이스:
/* 터치 타겟 최소 크기 (44px) */
.touch-target {
  min-height: 44px;
  min-width: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* 터치 영역 확장 */
.btn-touch {
  position: relative;
  padding: 12px 16px;
}

.btn-touch::before {
  content: '';
  position: absolute;
  top: -8px;
  left: -8px;
  right: -8px;
  bottom: -8px;
}

/* 스와이프 제스처 지원 */
.swipeable {
  touch-action: pan-x;
  overscroll-behavior: none;
}

5.7 Figma 작업 구조
-----------------
파일 구조:
📁 Linky Design System
├── 🎨 Foundations
│   ├── Colors
│   ├── Typography
│   ├── Spacing
│   └── Icons
├── 🧩 Components
│   ├── Buttons
│   ├── Form Elements
│   ├── Cards
│   ├── Navigation
│   └── Modals
├── 📱 Mobile Screens
│   ├── Onboarding
│   ├── Authentication
│   ├── Dashboard
│   ├── Booking Flow
│   └── Profile
├── 💻 Desktop Screens
│   ├── Admin Dashboard
│   ├── Approval System
│   └── Analytics
└── 🔄 Prototypes
    ├── User Flow - Business
    ├── User Flow - Partner
    └── Admin Flow

컴포넌트 라이브러리:
Component Naming Convention:
- [Category]/[Element]/[Variant]/[State]

예시:
- Button/Primary/Large/Default
- Button/Primary/Large/Hover
- Button/Primary/Large/Disabled
- Form/Input/Text/Default
- Form/Input/Text/Error
- Card/Job/Business/Default

6. 운영 준비사항
================

6.1 고객 지원 체계 구축
-------------------
고객센터 운영 계획:
📞 멀티채널 지원:
  - 이메일: support@linkykorea.com
  - 카카오톡 채널: @링키공식
  - 전화상담: 1588-0000 (평일 9-18시)
  - 채팅봇: 24시간 기본 문의 대응

🎯 응답 시간 목표:
  - 채팅/카톡: 5분 이내
  - 이메일: 2시간 이내
  - 전화: 3콜 이내
  - 복잡한 문의: 24시간 이내

📋 FAQ 시스템:
const FAQ_CATEGORIES = {
  account: {
    title: "계정 및 회원가입",
    items: [
      "회원가입 승인은 얼마나 걸리나요?",
      "비밀번호를 잊어버렸어요",
      "이메일 주소를 변경하고 싶어요",
      "회원 탈퇴는 어떻게 하나요?"
    ]
  },
  booking: {
    title: "예약 및 서비스",
    items: [
      "예약은 어떻게 하나요?",
      "예약 취소/변경은 언제까지 가능한가요?",
      "서비스 범위는 어디까지인가요?",
      "파트너를 직접 선택할 수 있나요?"
    ]
  },
  payment: {
    title: "결제 및 환불",
    items: [
      "어떤 결제 방법이 가능한가요?",
      "환불 정책이 궁금해요",
      "세금계산서 발행이 가능한가요?",
      "결제 내역은 어디서 확인하나요?"
    ]
  },
  partnership: {
    title: "파트너 관련",
    items: [
      "파트너 등록 조건은 무엇인가요?",
      "수수료는 얼마인가요?",
      "정산은 언제 이루어지나요?",
      "파트너 교육은 있나요?"
    ]
  }
};

🎓 고객지원팀 교육 매뉴얼:
교육 과정:
1주차: 서비스 이해 및 시스템 교육
- 링키 서비스 전반 이해
- 관리자 시스템 사용법
- 고객 응대 매뉴얼

2주차: 실무 교육
- 실제 고객 문의 처리
- 에스컬레이션 프로세스
- 크레임 처리 방법

3주차: 전문 지식 교육
- 결제/환불 처리
- 법적 이슈 대응
- 파트너 관리

6.2 품질 관리 시스템
------------------
서비스 품질 모니터링:
📊 KPI 지표:
const QUALITY_METRICS = {
  // 고객 만족도
  customerSatisfaction: {
    target: 4.5, // 5점 만점
    measurement: "서비스 완료 후 설문",
    frequency: "매 서비스마다"
  },
  
  // 파트너 품질
  partnerQuality: {
    target: 4.3, // 5점 만점
    measurement: "고객 리뷰 평균",
    frequency: "월간 집계"
  },
  
  // 응답 시간
  responseTime: {
    target: 2, // 시간
    measurement: "문의 접수 후 첫 응답",
    frequency: "실시간 모니터링"
  },
  
  // 완료율
  completionRate: {
    target: 95, // %
    measurement: "예약 대비 완료 비율",
    frequency: "주간 집계"
  },
  
  // 재예약률
  retentionRate: {
    target: 70, // %
    measurement: "3개월 내 재이용",
    frequency: "분기별 집계"
  }
};

🔍 품질 점검 프로세스:
1단계: 신규 파트너 모니터링
- 첫 5회 서비스 필수 피드백 수집
- 품질 기준 미달시 추가 교육
- 3회 연속 저평가시 자격 정지

2단계: 정기 품질 점검
- 월 1회 무작위 서비스 점검
- 고객 인터뷰를 통한 품질 확인
- 파트너 재교육 프로그램 운영

3단계: 지속적 개선
- 고객 피드백 분석
- 서비스 표준 업데이트
- 우수 파트너 인센티브 제공

6.3 파트너 관리 체계
------------------
파트너 교육 프로그램:
📚 온보딩 교육 (신규 파트너 필수):
1일차: 서비스 이해
- 링키 서비스 철학 및 가치
- 고객 유형별 특성 이해
- 서비스 표준 및 프로세스

2일차: 실무 교육
- 정리 기법 및 노하우
- 고객 소통 방법
- 안전 수칙 및 보험

3일차: 시스템 교육
- 앱 사용법 교육
- 예약 관리 시스템
- 정산 및 세무 가이드

🏆 파트너 등급 시스템:
const PARTNER_GRADES = {
  bronze: {
    name: "브론즈",
    requirements: {
      reviews: 10,
      rating: 4.0,
      completionRate: 90
    },
    benefits: [
      "기본 수수료 20%"
    ]
  },
  silver: {
    name: "실버",
    requirements: {
      reviews: 30,
      rating: 4.3,
      completionRate: 95
    },
    benefits: [
      "수수료 18%",
      "우선 배정 기회"
    ]
  },
  gold: {
    name: "골드",
    requirements: {
      reviews: 50,
      rating: 4.5,
      completionRate: 97
    },
    benefits: [
      "수수료 15%",
      "프리미엄 매칭",
      "월 보너스 지급"
    ]
  },
  platinum: {
    name: "플래티넘",
    requirements: {
      reviews: 100,
      rating: 4.7,
      completionRate: 98
    },
    benefits: [
      "수수료 12%",
      "VIP 고객 전담",
      "분기 보너스 지급",
      "교육 프로그램 우선 참여"
    ]
  }
};

💰 파트너 인센티브 프로그램:
월간 인센티브:
- 최다 완료: 50만원
- 최고 평점: 30만원
- 베스트 리뷰: 20만원

분기별 인센티브:
- MVP 파트너: 200만원
- 성장상: 100만원
- 신인상: 50만원

6.4 위험 관리 및 대응
------------------
🚨 위기 상황 대응 매뉴얼:
Level 1: 일반 클레임
- 처리 시간: 1일 이내
- 담당자: 고객지원팀
- 대응 방법: 표준 프로세스 적용

Level 2: 심각한 불만
- 처리 시간: 4시간 이내
- 담당자: 팀장급
- 대응 방법: 직접 연락 + 보상

Level 3: 법적 분쟁 가능성
- 처리 시간: 1시간 이내
- 담당자: 경영진
- 대응 방법: 법무팀 연계

🛡️ 보험 및 배상 체계:
파트너 배상책임보험:
- 대인: 1억원
- 대물: 5천만원
- 도난: 1천만원

회사 종합보험:
- 일반배상책임: 10억원
- 생산물배상책임: 5억원
- 전문직업배상책임: 3억원

📋 사고 발생시 대응 절차:
1단계: 즉시 대응
- 현장 안전 확보
- 응급상황시 119 신고
- 고객 안전 확인

2단계: 사실 확인
- 현장 사진 촬영
- 관련자 진술 수집
- 보험사 신고

3단계: 후속 조치
- 고객 사후 관리
- 파트너 재교육
- 시스템 개선

6.5 재무 관리 시스템
------------------
💳 정산 시스템:
자동 정산 프로세스:
```javascript
const SETTLEMENT_PROCESS = {
  // 매일 오전 3시 자동 실행
  dailySettlement: {
    // 전일 완료된 서비스 집계
    collectCompletedJobs: true,
    
    // 수수료 계산
    calculateCommission: {
      base: 0.20,        // 기본 20%
      gradeDiscount: {   // 등급별 할인
        silver: 0.02,
        gold: 0.05,
        platinum: 0.08
      }
    },
    
    // 부가세 계산
    vatCalculation: {
      rate: 0.10,
      applies: "commission_only"
    }
  },
  
  // 월말 정산
  monthlySettlement: {
    cutoffDate: 25,      // 매월 25일 마감
    paymentDate: 10,     // 익월 10일 지급
    minimumAmount: 10000 // 최소 정산 금액
  }
};
```

📊 재무 모니터링:
핵심 재무 지표:
const FINANCIAL_KPI = {
  // 수익성 지표
  revenue: {
    monthly: "월 매출",
    growth: "전월 대비 성장률",
    target: "월 5억원 (연말 기준)"
  },
  
  // 비용 관리
  costs: {
    commission: "파트너 수수료",
    operations: "운영비",
    marketing: "마케팅비",
    target: "매출 대비 70% 이하"
  },
  
  // 현금 흐름
  cashflow: {
    collection: "수금율",
    payment: "지급율",
    balance: "현금 잔고"
  }
};

🔍 재무 위험 관리:
리스크 모니터링:
- 고객 결제 지연 추적
- 파트너 정산 오류 점검
- 환불 패턴 분석
- 현금 흐름 예측

6.6 마케팅 및 홍보
----------------
🎯 마케팅 전략:
온라인 마케팅:
- 네이버/구글 검색광고
- 카카오톡 채널 운영
- 인스타그램/페이스북 SNS
- 블로그 콘텐츠 마케팅

오프라인 마케팅:
- 스터디카페 직접 방문 영업
- 프랜차이즈 본사 제휴
- 업계 세미나 참여
- 입소문 마케팅 프로그램

📱 콘텐츠 마케팅:
블로그 콘텐츠 계획:
- "효율적인 공간 정리 노하우"
- "스터디카페 운영 팁"
- "고객 성공 사례"
- "파트너 인터뷰"

SNS 콘텐츠:
- Before/After 사진
- 정리 팁 영상
- 고객 후기
- 파트너 소개

🤝 파트너십 및 제휴:
전략적 제휴 대상:
- 스터디카페 프랜차이즈
- 코워킹스페이스 운영사
- 인테리어 업체
- 청소용품 업체

제휴 혜택:
- 회원 할인 쿠폰
- 우선 예약 서비스
- 정기 정리 패키지
- 맞춤형 솔루션

6.7 기술 운영 체계
----------------
🔧 시스템 모니터링:
24/7 모니터링 체계:
- 서버 상태 모니터링
- 데이터베이스 성능 추적
- API 응답 시간 측정
- 오류율 실시간 알림

백업 및 복구:
- 실시간 데이터 백업
- 일일 전체 백업
- 주간 오프사이트 백업
- 재해 복구 계획 (RTO: 4시간)

🚀 성능 최적화:
최적화 계획:
- CDN 활용한 속도 개선
- 데이터베이스 쿼리 최적화
- 이미지 압축 및 lazy loading
- 캐싱 전략 고도화

보안 강화:
- 정기 보안 점검
- 침투 테스트 실시
- 보안 패치 즉시 적용
- 개인정보 암호화 강화

====================================================================

7. 단계별 전략 수립
==================

7.1 MVP 출시 단계 (1-3개월)
-------------------------
🎯 1단계 목표: 기본 서비스 검증

핵심 기능 개발:
Week 1-2: 인프라 구축
- Firebase 프로젝트 설정
- 기본 인증 시스템 구현
- 데이터베이스 스키마 생성
- 관리자 대시보드 기본 기능

Week 3-4: 회원가입 시스템
- 사업자/파트너 회원가입 폼
- 수동 승인 프로세스 구현
- 이메일 발송 시스템
- 기본 프로필 관리

Week 5-8: 예약 시스템
- 서비스 예약 기능
- 파트너 배정 시스템
- 기본 결제 연동
- 알림 시스템

Week 9-12: 테스트 및 런칭
- 베타 테스트 진행
- 버그 수정 및 최적화
- 초기 파트너 모집
- 소프트 런칭

📊 1단계 성공 지표:
- 가입자 수: 사업자 50명, 파트너 20명
- 월 거래액: 1,000만원
- 고객 만족도: 4.0/5.0
- 시스템 안정성: 99% 업타임

7.2 성장 단계 (4-12개월)
----------------------
🎯 2단계 목표: 시장 확장 및 최적화

기능 확장:
Month 4-6: 고급 기능 개발
- 실시간 채팅 시스템
- 리뷰 및 평점 시스템
- 정기 예약 기능
- 모바일 앱 출시

Month 7-9: 마케팅 강화
- 네이버/구글 광고 집행
- 제휴사 확대
- 콘텐츠 마케팅 본격화
- 인플루언서 마케팅

Month 10-12: 서비스 고도화
- AI 기반 매칭 시스템
- 예측 분석 도구
- 고급 결제 옵션
- 기업 고객 대상 서비스

📊 2단계 성공 지표:
- 가입자 수: 사업자 500명, 파트너 200명
- 월 거래액: 1억원
- 고객 만족도: 4.3/5.0
- 파트너 정착률: 80%

7.3 확장 단계 (1-2년차)
--------------------
🎯 3단계 목표: 시장 리더십 확보

시장 확장:
Year 2 Q1-Q2: 지역 확장
- 부산, 대구 서비스 확대
- 지역별 파트너 네트워크 구축
- 현지 마케팅 팀 구성
- 지역 특화 서비스 개발

Year 2 Q3-Q4: 서비스 다양화
- B2B 기업 서비스 본격화
- 홈클리닝 서비스 확장
- 이사/입주청소 서비스
- 인테리어 연계 서비스

조직 확장:
팀 구성 계획:
- 개발팀: 10명 (풀스택, 모바일, DevOps)
- 운영팀: 15명 (CS, 품질관리, 파트너관리)
- 마케팅팀: 8명 (디지털, 콘텐츠, 제휴)
- 경영지원: 5명 (재무, 인사, 법무)

📊 3단계 성공 지표:
- 가입자 수: 사업자 2,000명, 파트너 500명
- 월 거래액: 5억원
- 시장 점유율: 업계 3위
- 직원 수: 40명

7.4 성숙 단계 (3년차 이후)
-----------------------
🎯 4단계 목표: 플랫폼 생태계 완성

플랫폼 확장:
- 종합 시설관리 플랫폼으로 발전
- 청소용품 이커머스 연계
- 파트너 교육 사업 확장
- 프랜차이즈 사업 검토

기술 혁신:
- IoT 기반 스마트 모니터링
- AI 기반 예측 정리 서비스
- VR/AR 활용 사전 컨설팅
- 블록체인 기반 신뢰도 시스템

글로벌 진출:
- 동남아시아 시장 진출
- 현지 파트너십 구축
- 글로벌 표준 서비스 개발
- 다국어 플랫폼 구축

📊 4단계 성공 지표:
- 국내 시장 점유율 1위
- 해외 진출 2개국
- 연 매출 100억원
- 기업 가치 500억원

7.5 위험 요소 및 대응 전략
-----------------------
🚨 주요 위험 요소:

시장 위험:
- 경쟁사 출현
- 경기 침체
- 규제 변화
- 고객 니즈 변화

대응 전략:
- 차별화된 서비스 개발
- 다양한 수익원 확보
- 정책 모니터링 강화
- 지속적 시장 조사

운영 위험:
- 파트너 이탈
- 서비스 품질 저하
- 시스템 장애
- 인력 확보 어려움

대응 전략:
- 파트너 인센티브 강화
- 품질 관리 시스템 고도화
- 인프라 이중화 구축
- 인재 채용 프로그램 운영

재무 위험:
- 현금 흐름 악화
- 투자 유치 실패
- 정산 오류
- 환불 급증

대응 전략:
- 보수적 재무 계획
- 다양한 투자처 발굴
- 자동화 시스템 구축
- 보험 상품 가입

7.6 성공 측정 지표 (KPI)
--------------------
📊 핵심 성과 지표:

사업 지표:
const BUSINESS_KPI = {
  // 성장 지표
  growth: {
    userGrowth: "월간 신규 가입자 수",
    revenueGrowth: "월간 매출 성장률",
    transactionGrowth: "월간 거래 건수 증가율",
    marketShare: "시장 점유율"
  },
  
  // 운영 지표
  operations: {
    satisfaction: "고객 만족도",
    retention: "고객 재이용률",
    partnerRetention: "파트너 정착률",
    completionRate: "예약 완료율"
  },
  
  // 재무 지표
  financial: {
    revenue: "월 매출",
    profit: "월 순이익",
    cashflow: "현금 흐름",
    customerLTV: "고객 생애 가치"
  }
};

기술 지표:
const TECH_KPI = {
  performance: {
    uptime: "시스템 가동률 (목표: 99.9%)",
    responseTime: "API 응답 시간 (목표: 200ms)",
    errorRate: "오류 발생률 (목표: 0.1%)",
    loadTime: "페이지 로딩 시간 (목표: 3초)"
  },
  
  security: {
    vulnerabilities: "보안 취약점 수",
    incidents: "보안 사고 건수",
    patchTime: "보안 패치 적용 시간",
    dataBreaches: "개인정보 유출 건수"
  }
};

7.7 마일스톤 및 체크포인트
-----------------------
🎯 주요 마일스톤:

3개월 체크포인트:
- [ ] MVP 출시 완료
- [ ] 초기 고객 확보 (사업자 50명)
- [ ] 파트너 네트워크 구축 (20명)
- [ ] 시드 투자 유치 (5억원)

6개월 체크포인트:
- [ ] 월 거래액 5,000만원 달성
- [ ] 모바일 앱 출시
- [ ] 시리즈 A 투자 유치 (20억원)
- [ ] 팀 규모 20명 확장

12개월 체크포인트:
- [ ] 월 거래액 1억원 달성
- [ ] 지역 확장 시작
- [ ] 파트너 200명 확보
- [ ] 흑자 전환

24개월 체크포인트:
- [ ] 월 거래액 5억원 달성
- [ ] 전국 서비스 확대
- [ ] 시장 점유율 Top 3
- [ ] IPO 준비 착수

💡 성공 전략 핵심 요소:
1. 고객 중심 서비스 설계
2. 파트너 생태계 구축
3. 기술 기반 효율성 확보
4. 지속적 품질 개선
5. 데이터 기반 의사결정

====================================================================

남은 작업 항목
==============
✅ 모든 설계 항목 완료

====================================================================

작업 진행 상황
=============
✅ 완료: 수동 승인 프로세스 설계
✅ 완료: 개인정보처리방침 초안 작성
✅ 완료: 이용약관 초안 작성
✅ 완료: 파트너 서비스 약관 작성 (근로자성 회피 중심)
✅ 완료: MVP 보안 설계
✅ 완료: 기술 아키텍처 확정
✅ 완료: UX/UI 설계 (Figma 기반)
✅ 완료: 운영 준비사항 정리
✅ 완료: 단계별 전략 수립

====================================================================

최종 구현 우선순위
================

🚀 즉시 시작 (Week 1-2):
1. Firebase 프로젝트 생성 및 설정
2. 기본 HTML/CSS/JS 구조 개선
3. 회원가입 폼 고도화 (유형별 분리)
4. 관리자 승인 대시보드 기본 기능

⚡ 단기 목표 (Month 1):
1. 이메일 인증 및 알림 시스템
2. 파일 업로드 보안 강화
3. 수동 승인 프로세스 완성
4. 기본 결제 시스템 연동

🎯 중기 목표 (Month 2-3):
1. 예약 및 매칭 시스템 구현
2. 실시간 알림 기능
3. 모바일 반응형 최적화
4. 초기 고객 및 파트너 모집

🏆 장기 목표 (Month 4-6):
1. React.js 마이그레이션 시작
2. 모바일 앱 개발 착수
3. AI 기반 매칭 알고리즘
4. 본격적인 마케팅 및 확장

====================================================================

핵심 권장사항
============

법무 검토 필수:
- 개인정보처리방침 전문가 검토
- 이용약관 법무팀 검토
- 파트너 약관 노무사 검토
- 전자상거래법 컴플라이언스 확인

기술적 우선순위:
- Firebase Security Rules 강화
- HTTPS 인증서 적용
- 데이터 암호화 구현
- 정기 보안 점검 체계

운영 준비:
- 고객지원 팀 구성 및 교육
- 파트너 온보딩 프로세스 구축
- 품질 관리 시스템 운영
- 위험 관리 및 보험 가입

====================================================================

연락처 및 문의
=============
기술 관련 문의: Claude Code AI Assistant
법무 관련 문의: 전문 법무법인 자문 권장
개인정보보호 관련: 개인정보보호 전문가 자문 권장
사업 전략 관련: 스타트업 전문 컨설턴트 자문 권장

====================================================================

문서 버전: 3.0 (최종 완성본)
최종 수정일: 2025-01-16
총 페이지 수: 2,400+ 줄

이 문서는 링키(Linky) 플랫폼의 회원가입 시스템 설계부터 
사업 전략까지 포함한 종합 설계 문서입니다.

모든 설계 항목이 완료되었으며, 즉시 개발 착수 가능한 
상태의 상세한 기술 명세서와 사업 계획서를 포함합니다.